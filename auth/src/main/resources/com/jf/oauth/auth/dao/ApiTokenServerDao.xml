<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jf.oauth.auth.dao.ApiTokenServerDao">
    <resultMap type="ApiTokenServer" id="apiTokenServer">
        <id property="id" column="id" />
        <result property="clientId" column="client_id" />
        <result property="name" column="name" />
        <result property="url" column="url" />
        <result property="expireTime" column="expire_time" />
        <result property="createTime" column="create_time" />
        <result property="updateTime" column="update_time" />
        <result property="dataStatus" column="data_status" />
    </resultMap>

    <select id="getList" parameterType="Map" resultMap="apiTokenServer">
        select * from api_token_server
        <trim prefix="WHERE"  suffix="" prefixOverrides="AND |OR ">
            <if test="id!=null">
                and id=#{id}
            </if>
            <if test="clientId!=null">
                and client_id=#{clientId}
            </if>
            <if test="dataStatus==null">
                and data_status=1
            </if>
            <if test="dataStatus!=null">
                and data_status=#{dataStatus}
            </if>
        </trim>
        <if test="start!=null and end!=null">
        limit #{start},#{end}
        </if>
    </select>

    <select id="getOne" parameterType="Map" resultMap="apiTokenServer">
        select * from api_token_server
        <trim prefix="WHERE"  suffix="" prefixOverrides="AND |OR ">
            <if test="id!=null">
                and id=#{id}
            </if>
            <if test="clientId!=null">
                and client_id=#{clientId}
            </if>
            <if test="dataStatus==null">
                and data_status=1
            </if>
            <if test="dataStatus!=null">
                and data_status=#{dataStatus}
            </if>
        </trim>
        order by id desc
        limit 1
    </select>

    <insert id="addOne" parameterType="apiTokenServer" useGeneratedKeys="true" keyProperty="id">
        insert into api_token_server (id,client_id,name,url,expire_time,create_time,update_time,data_status)
        values(null,#{clientId},#{name},#{url},#{expireTime},#{createTime},#{updateTime},#{dataStatus})
    </insert>

    <update id="deleteOne" parameterType="Map">
        update api_token_server set data_status=0 where id=#{id}
    </update>

    <update id="updateOne" parameterType="Map">
        update api_token_server
        <set>
            <if test="clientId!=null">
                client_id=#{clientId},
            </if>
            <if test="expireTime!=null">
            	expire_time=#{expireTime},
            </if>
        </set>
        <trim prefix="WHERE"  suffix="" prefixOverrides="AND |OR ">
            <if test="id!=null">
                id=#{id}
            </if>
        </trim>
    </update>

    <delete id="dropOne" parameterType="Map">
        delete from api_token_server where id=#{id}
    </delete>
</mapper>